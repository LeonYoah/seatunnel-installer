#==============================================================================
# SeaTunnel基础配置
#==============================================================================

# SeaTunnel版本号
SEATUNNEL_VERSION=2.3.7

# 安装模式
# online: 在线安装，自动下载安装包
# offline: 离线安装，使用本地安装包
INSTALL_MODE=offline

# 离线安装包路径(INSTALL_MODE=offline时必填)
# 相对路径：相对于安装脚本所在目录
# 绝对路径：以/开头的完整路径
PACKAGE_PATH=apache-seatunnel-${SEATUNNEL_VERSION}.tar.gz

# 在线安装下载地址(INSTALL_MODE=online时使用)
# 可选配置，默认使用Apache官方下载地址
# DOWNLOAD_URL=https://archive.apache.org/dist/seatunnel/${SEATUNNEL_VERSION}/apache-seatunnel-${SEATUNNEL_VERSION}-bin.tar.gz

# 安装根目录
BASE_DIR=/data/seatunnel

# SSH连接端口
SSH_PORT=22

#==============================================================================
# 用户配置
#==============================================================================

# 安装用户
# 必须具有sudo权限，如果不存在会自动创建
INSTALL_USER=root

# 安装用户组
# 如果不存在会自动创建
INSTALL_GROUP=root

#==============================================================================
# 部署模式配置
#==============================================================================

# 部署模式
# separated: 分离模式，Master和Worker分开部署
# hybrid: 混合模式，所有节点对等部署
DEPLOY_MODE=separated

#==============================================================================
# 端口配置
#==============================================================================

# === 混合模式(DEPLOY_MODE=hybrid)下的端口配置 ===
# 所有节点使用相同的端口(默认5801)
HYBRID_PORT=5801

# === 分离模式(DEPLOY_MODE=separated)下的端口配置 ===
# Master节点端口(默认5801)
MASTER_PORT=5801

# Worker节点端口(默认5802)
WORKER_PORT=5802


#==============================================================================
# JVM内存配置
#==============================================================================


# === 混合模式(DEPLOY_MODE=hybrid)下的内存配置 ===
# 所有节点使用相同的JVM堆内存大小(GB)
HYBRID_HEAP_SIZE=5

# === 分离模式(DEPLOY_MODE=separated)下的内存配置 ===
# Master节点的JVM堆内存大小(GB)
MASTER_HEAP_SIZE=2

# Worker节点的JVM堆内存大小(GB)
WORKER_HEAP_SIZE=5


#==============================================================================
# 节点配置
#==============================================================================

# === 分离模式(DEPLOY_MODE=separated)下的节点配置 ===
# Master节点IP列表，多个用逗号分隔
# 示例: 192.168.1.100,192.168.1.101
MASTER_IP=192.168.1.100,192.168.1.101

# Worker节点IP列表，多个用逗号分隔
# 示例: 192.168.1.102,192.168.1.103,192.168.1.104
WORKER_IPS=192.168.1.102,192.168.1.103,192.168.1.104

# === 混合模式(DEPLOY_MODE=hybrid)下的节点配置 ===
# 集群所有节点IP列表，多个用逗号分隔
# 示例: 192.168.1.100,192.168.1.101,192.168.1.102
CLUSTER_NODES=192.168.1.100,192.168.1.101,192.168.1.102

#==============================================================================
# 检查点存储配置
#==============================================================================

# 存储类型，支持以下类型：
# - LOCAL_FILE: 本地文件存储（不建议在生产环境使用）
# - HDFS: HDFS分布式文件系统存储
# - OSS: 阿里云对象存储服务
# - S3: AWS S3或兼容S3协议的存储服务
CHECKPOINT_STORAGE_TYPE=LOCAL_FILE

# 检查点存储父路径
# - LOCAL_FILE类型会忽略此配置，使用安装目录下的checkpoint目录
# - 其他存储类型必须配置完整的存储路径
# 示例: /seatunnel/checkpoint/
CHECKPOINT_NAMESPACE=/tmp/seatunnel/checkpoint/

#==============================================================================
# HDFS配置 (CHECKPOINT_STORAGE_TYPE=HDFS时必填)
#==============================================================================

# HDFS NameNode主机地址
HDFS_NAMENODE_HOST=127.0.0.1

# HDFS NameNode端口
HDFS_NAMENODE_PORT=8020

#==============================================================================
# OSS/S3存储配置 (CHECKPOINT_STORAGE_TYPE=OSS或S3时必填)
#==============================================================================

# 存储服务地址
# - OSS示例: http://oss-cn-hangzhou.aliyuncs.com
# - S3示例: http://s3.amazonaws.com
STORAGE_ENDPOINT=http://127.0.0.1:9010

# 访问密钥ID
STORAGE_ACCESS_KEY=admin

# 访问密钥密码
STORAGE_SECRET_KEY=your_secret_key

# 存储桶名称
STORAGE_BUCKET=your_bucket

#==============================================================================
# 开机自启动配置
#==============================================================================

# 是否配置开机自启动(true/false)
ENABLE_AUTO_START=true


#==============================================================================
# 安装包下载配置
#==============================================================================

# 安装包下载源
# - apache: Apache官方源
# - aliyun: 阿里云镜像(推荐国内用户使用) 
# - huaweicloud: 华为云镜像
# - custom: 自定义下载地址
PACKAGE_REPO=aliyun

# 自定义安装包下载地址(PACKAGE_REPO=custom时必填)
# 变量说明:
# - ${version}: 会被替换为SEATUNNEL_VERSION的值
# CUSTOM_PACKAGE_URL=https://example.com/path/to/apache-seatunnel-${version}-bin.tar.gz

# 安装包仓库地址映射
declare -A PACKAGE_REPOS=(
    ["apache"]="https://archive.apache.org/dist/seatunnel"
    ["aliyun"]="https://mirrors.aliyun.com/apache/seatunnel"
    ["huaweicloud"]="https://mirrors.huaweicloud.com/apache/seatunnel"
)

#==============================================================================
# 插件下载配置  
#==============================================================================

# 插件下载源
# - apache: Apache官方源
# - aliyun: 阿里云Maven仓库(推荐国内用户使用)
# - huaweicloud: 华为云Maven仓库
# - custom: 自定义Maven仓库
PLUGIN_REPO=aliyun

# 自定义插件仓库地址(PLUGIN_REPO=custom时必填)
# CUSTOM_PLUGIN_URL=https://your-maven-repo.com/repository/maven-public

# 插件仓库地址映射
declare -A PLUGIN_REPOS=(
    ["apache"]="https://repo1.maven.org/maven2"
    ["aliyun"]="https://maven.aliyun.com/repository/public"
    ["huaweicloud"]="https://repo.huaweicloud.com/repository/maven"
)

# 插件下载地址模板
# 支持变量:
# - ${version}: SeaTunnel版本
# - ${connector}: 连接器名称
# - ${repo}: 仓库地址(会自动替换为选择的仓库)
PLUGIN_DOWNLOAD_URL=${repo}/org/apache/seatunnel/connector-${connector}/${version}/connector-${connector}-${version}.jar



#==============================================================================
# 连接器和依赖配置
#==============================================================================

# === SeaTunnel连接器配置 ===
# 是否安装连接器和依赖(true/false)
INSTALL_CONNECTORS=true

# 启用的连接器，多个用逗号分隔
# 可选值: jdbc,kafka,elasticsearch,file,http,redis,mongodb,s3,hive,clickhouse
# 留空则使用默认值: jdbc,hive
CONNECTORS=

# === 连接器依赖配置 ===
# 每个连接器的依赖库，使用Maven坐标
# Maven坐标格式: groupId:artifactId:version

# JDBC连接器依赖
jdbc_libs=(
    "mysql:mysql-connector-java:8.0.27"
    "org.postgresql:postgresql:42.4.3"
    "com.oracle.database.jdbc:ojdbc8:21.5.0.0"
    "com.oracle.database.jdbc:orai18n:19.7.0.0"
    "com.dameng:DmJdbcDriver18:8.1.2.141"
    "com.xugudb:xugu-jdbc:12.1.12"
    "com.microsoft.sqlserver:mssql-jdbc:9.2.1.jre8"
    "kingbase8:kingbase8:8.2.0"
)

# Hive连接器依赖
hive_libs=(
    "org.apache.hive:hive-exec:3.1.3"
    "org.apache.hive:hive-service:3.1.3"
)

# 其他连接器依赖配置...


